plugins {
    //TODO: make type library and move App to examples
    id 'application'
    id "com.diffplug.spotless" version "6.0.0"
}

group 'co.huggingface'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def moveTarget(String os) {
    def buildDir = "${project.buildDir}/classes/java/main/${os}-x86-64"
    file(buildDir).mkdirs()

    def targetDir = "${project.projectDir}/src/main/rust/target/debug"
    def tree = fileTree(targetDir)

    tree.include("libsafer_ffi_tokenizers.*")

    copy {
        from tree.files
        into buildDir
    }
}

task buildProject(dependsOn: 'compileJava') {
    doLast {
        exec {
            workingDir 'src/main/rust'
            commandLine 'cargo', 'test', '--features', 'c-headers', '--', 'generate_headers'
//            commandLine 'cargo', 'build', '--release'
        }

        def currentOs = System.properties['os.name']

        if (currentOs.startsWith("Mac")) {
            moveTarget("darwin")
        } else if (currentOs.startsWith("Linux")) {
            moveTarget("linux")
        } else {
            throw new IllegalStateException("Unsupported os: " + currentOs)
        }
    }

}

clean.doFirst {
    delete "./src/main/rust/target"
}

spotless {
    format 'misc', {
        target '*.properties','*.gradle', '*.md', '.gitignore' // etc.
    }
    java {
        indentWithSpaces()
        removeUnusedImports()
    }
}

dependencies {
    implementation 'net.java.dev.jna:jna:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

application {
    mainClass = 'co.huggingface.tokenizers.App'
}

test {
    useJUnitPlatform()
}
